name: Frontend - React App to Azure Web App CI/CD

on:
  push:
    branches:
      - main # Spouštět při pushi na main
    paths:
      - 'firefishportfoliomanager-client/**' # Jen při změnách ve frontendu
  workflow_dispatch: # Možnost ručního spuštění

env:
  AZURE_WEBAPP_NAME: firefish-portfolio-manager   # Název Azure Web App
  NODE_VERSION: '20.x'                            # Verze Node.js
  APP_PATH: 'firefishportfoliomanager-client'     # Cesta ke zdrojáku

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.APP_PATH }}/package-lock.json'

      - name: Debug - List directory structure before
        run: find ${{ env.APP_PATH }} -type d | sort
        
      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.APP_PATH }}

      - name: Build React app
        run: npm run build
        working-directory: ${{ env.APP_PATH }}
      
      - name: Debug - Find build directory
        run: find ${{ env.APP_PATH }} -name "build" -type d
      
      - name: Debug - List contents of build directory
        run: |
          BUILD_DIR=$(find ${{ env.APP_PATH }} -name "build" -type d | head -n 1)
          if [ -n "$BUILD_DIR" ]; then
            echo "Build directory found at: $BUILD_DIR"
            ls -la $BUILD_DIR
            echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
          else
            echo "Build directory not found!"
            exit 1
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ${{ env.BUILD_DIR }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: './build'

      - name: List downloaded artifact contents
        run: ls -la ./build

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FRONTEND }}
          package: './build'