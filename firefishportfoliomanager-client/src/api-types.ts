/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Diagnostics/test-smart-distribution": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Diagnostics_TestSmartDistribution"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/loans/{loanId}/exitstrategy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["LoanExitStrategy_GetExitStrategy"];
        put: operations["LoanExitStrategy_SetExitStrategy"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Loans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Loans_GetLoans"];
        put?: never;
        post: operations["Loans_CreateLoan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Loans/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Loans_GetLoan"];
        put: operations["Loans_UpdateLoan"];
        post?: never;
        delete: operations["Loans_DeleteLoan"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/market/btc-ath": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Market_GetBtcAthCzk"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sellorders/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["SellOrders_GetAllSellOrders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sellorders/loan/{loanId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["SellOrders_GetSellOrdersForLoan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sellorders/{orderId}/open": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["SellOrders_OpenSellOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sellorders/{orderId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["SellOrders_CancelSellOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/sellorders/sync": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["SellOrders_SyncSellOrders"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/User": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_GetCurrentUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/User/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["User_UpdateSettings"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/User/coinmate-credentials": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["User_UpdateCoinmateCredentials"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/User/btc-price": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_GetBtcPrice"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        SmartDistributionTestRequest: {
            /** Format: decimal */
            repaymentCzk?: number;
            /** Format: decimal */
            targetProfitPercent?: number;
            /** Format: decimal */
            btcProfitRatioPercent?: number;
            /** Format: int32 */
            orderCount?: number;
            /** Format: decimal */
            totalAvailableBtc?: number;
            /** Format: decimal */
            currentBtcPrice?: number;
        };
        ExitStrategyBase: Record<string, never>;
        HodlExitStrategy: components["schemas"]["ExitStrategyBase"] & {
            type?: components["schemas"]["ExitStrategyType"];
        };
        /** @enum {string} */
        ExitStrategyType: "HODL" | "CustomLadder" | "SmartDistribution" | "EquidistantLadder" | "EquifrequentLadder";
        CustomLadderExitStrategy: components["schemas"]["ExitStrategyBase"] & {
            type?: components["schemas"]["ExitStrategyType"];
            orders: components["schemas"]["CustomLadderOrder"][];
        };
        CustomLadderOrder: {
            /** Format: decimal */
            targetPriceCzk?: number;
            /** Format: decimal */
            percentToSell?: number;
        };
        SmartDistributionExitStrategy: components["schemas"]["ExitStrategyBase"] & {
            type?: components["schemas"]["ExitStrategyType"];
            /** Format: decimal */
            targetProfitPercent?: number;
            /** Format: int32 */
            orderCount?: number;
            /** Format: decimal */
            btcProfitRatioPercent?: number;
        };
        EquidistantLadderExitStrategy: components["schemas"]["ExitStrategyBase"] & {
            type?: components["schemas"]["ExitStrategyType"];
            /** Format: decimal */
            startPriceCzk: number;
            /** Format: decimal */
            endPriceCzk: number;
            /** Format: int32 */
            orderCount: number;
            distributionType: components["schemas"]["DistributionType"];
        };
        /** @enum {string} */
        DistributionType: "EQUAL" | "DECREASING" | "INCREASING";
        EquifrequentLadderExitStrategy: components["schemas"]["ExitStrategyBase"] & {
            type?: components["schemas"]["ExitStrategyType"];
            /** Format: decimal */
            basePriceCzk: number;
            /** Format: decimal */
            priceIncrementPercent: number;
            /** Format: int32 */
            orderCount: number;
            /** Format: decimal */
            btcPercentPerOrder: number;
        };
        LoanDto: {
            /** Format: int32 */
            id: number;
            loanId: string;
            loanDate: string;
            /** Format: int32 */
            loanPeriodMonths: number;
            repaymentDate: string;
            status: components["schemas"]["LoanStatus"];
            /** Format: decimal */
            loanAmountCzk: number;
            /** Format: decimal */
            interestRate: number;
            /** Format: decimal */
            repaymentAmountCzk: number;
            /** Format: decimal */
            feesBtc: number;
            /** Format: decimal */
            transactionFeesBtc: number;
            /** Format: decimal */
            collateralBtc: number;
            /** Format: decimal */
            totalSentBtc: number;
            /** Format: decimal */
            purchasedBtc: number;
            /** Format: decimal */
            potentialValueCzk: number;
            /** Format: decimal */
            remainingBtcAfterStrategy?: number;
            createdAt: string;
            updatedAt: string;
            strategyJson?: string;
            sellOrders?: components["schemas"]["SellOrderBasicDto"][];
        };
        /** @enum {string} */
        LoanStatus: "Active" | "Closed";
        SellOrderBasicDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            loanId: number;
            coinmateOrderId?: string | null;
            /** Format: decimal */
            btcAmount: number;
            /** Format: decimal */
            pricePerBtc: number;
            /** Format: decimal */
            totalCzk: number;
            status: components["schemas"]["SellOrderStatus"];
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            completedAt?: string | null;
        };
        /** @enum {string} */
        SellOrderStatus: "Planned" | "Submitted" | "PartiallyFilled" | "Completed" | "Cancelled" | "Failed";
        Loan: {
            /** Format: int32 */
            id?: number;
            userId: string;
            user?: components["schemas"]["User"] | null;
            loanId: string;
            /** Format: date-time */
            loanDate: string;
            /** Format: int32 */
            loanPeriodMonths?: number;
            /** Format: date-time */
            repaymentDate: string;
            status: components["schemas"]["LoanStatus"];
            /** Format: decimal */
            loanAmountCzk: number;
            /** Format: decimal */
            interestRate: number;
            /** Format: decimal */
            repaymentAmountCzk: number;
            /** Format: decimal */
            feesBtc: number;
            /** Format: decimal */
            transactionFeesBtc: number;
            /** Format: decimal */
            collateralBtc: number;
            /** Format: decimal */
            totalSentBtc: number;
            /** Format: decimal */
            purchasedBtc: number;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            sellOrders: components["schemas"]["SellOrder"][];
            strategyJson?: string | null;
        };
        User: {
            id: string;
            name: string;
            email: string;
            /** Format: decimal */
            allocatedBtc?: number;
            loans: components["schemas"]["Loan"][];
            coinmateApiKey?: string | null;
            coinmateApiSecret?: string | null;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /** Format: date-time */
            lastLoginAt?: string | null;
            /** Format: decimal */
            drawdownFromAth: number;
            /** Format: decimal */
            absoluteLiquidationPrice: number;
            /** Format: decimal */
            ltvPercent: number;
        };
        SellOrder: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            loanId: number;
            loan?: components["schemas"]["Loan"] | null;
            coinmateOrderId?: string | null;
            /** Format: decimal */
            btcAmount: number;
            /** Format: decimal */
            pricePerBtc: number;
            /** Format: decimal */
            totalCzk: number;
            status: components["schemas"]["SellOrderStatus"];
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            completedAt?: string | null;
        };
        BtcAthModel: {
            /** Format: decimal */
            athCzk?: number;
        };
        SellOrderAggDto: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            loanId: number;
            coinmateOrderId?: string | null;
            /** Format: decimal */
            btcAmount: number;
            /** Format: decimal */
            pricePerBtc: number;
            /** Format: decimal */
            totalCzk: number;
            status: components["schemas"]["SellOrderStatus"];
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            completedAt?: string | null;
            loanReference: components["schemas"]["LoanReferenceDto"];
        };
        LoanReferenceDto: {
            /** Format: int32 */
            id: number;
            loanId: string;
            /** Format: decimal */
            loanAmountCzk: number;
            /** Format: date-time */
            repaymentDate: string;
        };
        UserDto: {
            id: string;
            name: string;
            email: string;
            /** Format: decimal */
            allocatedBtc: number;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            lastLoginAt?: string | null;
            /** Format: decimal */
            drawdownFromAth: number;
            /** Format: decimal */
            ltvPercent: number;
            /** Format: decimal */
            absoluteLiquidationPrice: number;
        };
        UserSettingsUpdateModel: {
            /** Format: decimal */
            allocatedBtc?: number;
            /** Format: decimal */
            drawdownFromAth?: number;
            /** Format: decimal */
            absoluteLiquidationPrice?: number;
            /** Format: decimal */
            ltvPercent?: number;
        };
        CoinmateCredentialsModel: {
            apiKey?: string;
            apiSecret?: string;
        };
        BtcPriceModel: {
            /** Format: decimal */
            priceCzk?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    Diagnostics_TestSmartDistribution: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SmartDistributionTestRequest"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    LoanExitStrategy_GetExitStrategy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loanId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExitStrategyBase"];
                };
            };
        };
    };
    LoanExitStrategy_SetExitStrategy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loanId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ExitStrategyBase"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    Loans_GetLoans: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanDto"][];
                };
            };
        };
    };
    Loans_CreateLoan: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Loan"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanDto"];
                };
            };
        };
    };
    Loans_GetLoan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanDto"];
                };
            };
        };
    };
    Loans_UpdateLoan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Loan"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoanDto"];
                };
            };
        };
    };
    Loans_DeleteLoan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    Market_GetBtcAthCzk: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BtcAthModel"];
                };
            };
        };
    };
    SellOrders_GetAllSellOrders: {
        parameters: {
            query?: {
                status?: components["schemas"]["SellOrderStatus"] | null;
                sortBy?: string | null;
                sortDir?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SellOrderAggDto"][];
                };
            };
        };
    };
    SellOrders_GetSellOrdersForLoan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                loanId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SellOrderBasicDto"][];
                };
            };
        };
    };
    SellOrders_OpenSellOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orderId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    SellOrders_CancelSellOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                orderId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    SellOrders_SyncSellOrders: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    User_GetCurrentUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDto"];
                };
            };
        };
    };
    User_UpdateSettings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserSettingsUpdateModel"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDto"];
                };
            };
        };
    };
    User_UpdateCoinmateCredentials: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CoinmateCredentialsModel"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/octet-stream": string;
                };
            };
        };
    };
    User_GetBtcPrice: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BtcPriceModel"];
                };
            };
        };
    };
}
